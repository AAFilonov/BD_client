//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BD_client
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MyBDEntities : DbContext
    {
        public MyBDEntities()
            : base("name=MyBDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Adress> Adress { get; set; }
        public virtual DbSet<Client> Client { get; set; }
        public virtual DbSet<Con_point> Con_point { get; set; }
        public virtual DbSet<Legal_entity> Legal_entity { get; set; }
        public virtual DbSet<Region> Region { get; set; }
        public virtual DbSet<Service_Net> Service_Net { get; set; }
        public virtual DbSet<Service_Other> Service_Other { get; set; }
        public virtual DbSet<Service_Other_Type> Service_Other_Type { get; set; }
        public virtual DbSet<Service_TV> Service_TV { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tariff> Tariff { get; set; }
        public virtual DbSet<Tv_bundle> Tv_bundle { get; set; }
        public virtual DbSet<Tv_bundle_channel> Tv_bundle_channel { get; set; }
        public virtual DbSet<Tv_channel> Tv_channel { get; set; }
        public virtual DbSet<Tv_Service_bundle> Tv_Service_bundle { get; set; }
        public virtual DbSet<Type_Cl> Type_Cl { get; set; }
        public virtual DbSet<Сontract_table> Сontract_table { get; set; }
        public virtual DbSet<View_Client_Services> View_Client_Services { get; set; }
        public virtual DbSet<View_legal_entities> View_legal_entities { get; set; }
    
        [DbFunction("MyBDEntities", "Function1")]
        public virtual IQueryable<Function1_Result> Function1(Nullable<int> count)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Function1_Result>("[MyBDEntities].[Function1](@count)", countParameter);
        }
    }
}
